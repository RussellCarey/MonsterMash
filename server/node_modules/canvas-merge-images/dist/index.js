"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mergeBase64 = mergeBase64;
exports.mergeFile = mergeFile;
exports.file2base64 = file2base64;
exports.base642img = base642img;

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function mergeBase64() {
  return _mergeBase.apply(this, arguments);
}

function _mergeBase() {
  _mergeBase = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee2() {
    var base64s,
        config,
        _quanlity$config,
        quanlity,
        imgs,
        _calcCanvas,
        width,
        height,
        offscreenCanvas,
        curTop,
        imageContext,
        _iterator2,
        _step2,
        img,
        _args2 = arguments;

    return _regenerator["default"].wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            base64s = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : [];
            config = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : {};
            _quanlity$config = _objectSpread({
              quanlity: 0.92
            }, config), quanlity = _quanlity$config.quanlity;
            _context2.next = 5;
            return Promise.all(base64s.map( /*#__PURE__*/function () {
              var _ref = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee(x) {
                return _regenerator["default"].wrap(function _callee$(_context) {
                  while (1) {
                    switch (_context.prev = _context.next) {
                      case 0:
                        _context.next = 2;
                        return base642img(x);

                      case 2:
                        return _context.abrupt("return", _context.sent);

                      case 3:
                      case "end":
                        return _context.stop();
                    }
                  }
                }, _callee);
              }));

              return function (_x) {
                return _ref.apply(this, arguments);
              };
            }()));

          case 5:
            imgs = _context2.sent;
            _calcCanvas = calcCanvas(imgs), width = _calcCanvas.width, height = _calcCanvas.height;
            offscreenCanvas = document.createElement('canvas');
            offscreenCanvas.width = width;
            offscreenCanvas.height = height;
            curTop = 0, imageContext = offscreenCanvas.getContext('2d');
            _iterator2 = _createForOfIteratorHelper(imgs);

            try {
              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
                img = _step2.value;
                imageContext.drawImage(img, 0, curTop);
                curTop += img.height;
              }
            } catch (err) {
              _iterator2.e(err);
            } finally {
              _iterator2.f();
            }

            return _context2.abrupt("return", offscreenCanvas.toDataURL('image/jpeg', quanlity));

          case 14:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));
  return _mergeBase.apply(this, arguments);
}

function mergeFile() {
  return _mergeFile.apply(this, arguments);
}

function _mergeFile() {
  _mergeFile = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee4() {
    var files,
        config,
        base64s,
        _args4 = arguments;
    return _regenerator["default"].wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            files = _args4.length > 0 && _args4[0] !== undefined ? _args4[0] : [];
            config = _args4.length > 1 && _args4[1] !== undefined ? _args4[1] : {};
            _context4.next = 4;
            return Promise.all((0, _toConsumableArray2["default"])(files).map( /*#__PURE__*/function () {
              var _ref2 = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee3(x) {
                return _regenerator["default"].wrap(function _callee3$(_context3) {
                  while (1) {
                    switch (_context3.prev = _context3.next) {
                      case 0:
                        _context3.next = 2;
                        return file2base64(x);

                      case 2:
                        return _context3.abrupt("return", _context3.sent);

                      case 3:
                      case "end":
                        return _context3.stop();
                    }
                  }
                }, _callee3);
              }));

              return function (_x2) {
                return _ref2.apply(this, arguments);
              };
            }()));

          case 4:
            base64s = _context4.sent;
            return _context4.abrupt("return", mergeBase64(base64s, config));

          case 6:
          case "end":
            return _context4.stop();
        }
      }
    }, _callee4);
  }));
  return _mergeFile.apply(this, arguments);
}

function file2base64(file) {
  return URL.createObjectURL(file);
}

function base642img(imgFile) {
  return new Promise(function (resolve, reject) {
    var img = new Image();

    img.onload = function () {
      return resolve(img);
    };

    img.onerror = function (err) {
      return reject(err);
    };

    img.src = imgFile;
  });
}
/**
 * 
 * @param {Image[]} imgs 
 */


function calcCanvas() {
  var imgs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  var width = 0,
      height = 0;

  var _iterator = _createForOfIteratorHelper(imgs),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var img = _step.value;
      width = Math.max(width, img.width);
      height += img.height;
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }

  return {
    width: width,
    height: height
  };
}